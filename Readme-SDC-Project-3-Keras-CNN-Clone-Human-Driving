Before starting this project I did research about the best aproach to take for this project, I used this resources to get a good feeling 
about the purpose of the project and best techniques to counter problems when facing them, see all resources used listed below this page.


xxx > List of used resources







model.py - The script used to create and train the model.
drive.py - The script to drive the car. resubmit the original drive.py or make modifications and submit your modified version.
model.json - The model architecture.
model.h5 - The model weights.
README.md - explains the structure of your network and training approach. While we recommend using English for good practice, 
writing in any language is acceptable (reviewers will translate). There is no minimum word count so long as there are complete 
descriptions of the problems and the strategies. 








I used the Keras Sequential model with ... layers, ....



____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 31, 31, 16)    448         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 15, 15, 16)    2320        convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 7, 7, 8)       1160        convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 5, 5, 4)       292         convolution2d_3[0][0]            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 3, 3, 2)       74          convolution2d_4[0][0]            
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 18)            0           convolution2d_5[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 18)            0           flatten_1[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 128)           2432        dropout_1[0][0]                  
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 64)            8256        dense_1[0][0]                    
____________________________________________________________________________________________________
dense_3 (Dense)                  (None, 16)            1040        dense_2[0][0]                    
____________________________________________________________________________________________________
dense_4 (Dense)                  (None, 1)             17          dense_3[0][0]                    
====================================================================================================
Total params: 16039
____________________________________________________________________________________________________










The first run of the model performed great using 10 EPOCH's and batch size 64, this resulted in: loss: 0.0128 - val_loss: 0.0111.
But I decided to tweak the model even more, but I also kept in mind that I had to be carefull not to overfit the model, thus this
would mean no good for driving the track.

The parameters I tweaked were:

Number of EPOCH's
Batch size
Image size
.........

This overview is showing the gains and losses the model suffered during tweaking it's parameters and the resulting loss & val_loss value:

Epoch 10/10
  64/8036 [..............................] - ETA: 11s - loss: 0.0209
 128/8036 [..............................] - ETA: 11s - loss: 0.0154
 192/8036 [..............................] - ETA: 11s - loss: 0.0141
 256/8036 [..............................] - ETA: 11s - loss: 0.0127
 320/8036 [>.............................] - ETA: 11s - loss: 0.0134
 384/8036 [>.............................] - ETA: 17s - loss: 0.0128
 448/8036 [>.............................] - ETA: 20s - loss: 0.0126
 512/8036 [>.............................] - ETA: 23s - loss: 0.0131
 576/8036 [=>............................] - ETA: 25s - loss: 0.0129
 640/8036 [=>............................] - ETA: 27s - loss: 0.0125
 704/8036 [=>............................] - ETA: 29s - loss: 0.0124
 768/8036 [=>............................] - ETA: 30s - loss: 0.0130
 832/8036 [==>...........................] - ETA: 30s - loss: 0.0131
 896/8036 [==>...........................] - ETA: 30s - loss: 0.0135
 960/8036 [==>...........................] - ETA: 30s - loss: 0.0131
1024/8036 [==>...........................] - ETA: 30s - loss: 0.0128
1088/8036 [===>..........................] - ETA: 30s - loss: 0.0130
1152/8036 [===>..........................] - ETA: 30s - loss: 0.0128
1216/8036 [===>..........................] - ETA: 30s - loss: 0.0130
1280/8036 [===>..........................] - ETA: 30s - loss: 0.0128
1344/8036 [====>.........................] - ETA: 30s - loss: 0.0127
1408/8036 [====>.........................] - ETA: 30s - loss: 0.0132
1472/8036 [====>.........................] - ETA: 29s - loss: 0.0132
1536/8036 [====>.........................] - ETA: 30s - loss: 0.0129
1600/8036 [====>.........................] - ETA: 30s - loss: 0.0128
1664/8036 [=====>........................] - ETA: 29s - loss: 0.0127
1728/8036 [=====>........................] - ETA: 29s - loss: 0.0127
1792/8036 [=====>........................] - ETA: 29s - loss: 0.0127
1856/8036 [=====>........................] - ETA: 29s - loss: 0.0127
1920/8036 [======>.......................] - ETA: 28s - loss: 0.0128
1984/8036 [======>.......................] - ETA: 28s - loss: 0.0128
2048/8036 [======>.......................] - ETA: 28s - loss: 0.0128
2112/8036 [======>.......................] - ETA: 28s - loss: 0.0128
2176/8036 [=======>......................] - ETA: 28s - loss: 0.0130
2240/8036 [=======>......................] - ETA: 27s - loss: 0.0130
2304/8036 [=======>......................] - ETA: 27s - loss: 0.0129
2368/8036 [=======>......................] - ETA: 27s - loss: 0.0128
2432/8036 [========>.....................] - ETA: 26s - loss: 0.0127
2496/8036 [========>.....................] - ETA: 26s - loss: 0.0128
2560/8036 [========>.....................] - ETA: 26s - loss: 0.0128
2624/8036 [========>.....................] - ETA: 26s - loss: 0.0130
2688/8036 [=========>....................] - ETA: 25s - loss: 0.0129
2752/8036 [=========>....................] - ETA: 25s - loss: 0.0128
2816/8036 [=========>....................] - ETA: 25s - loss: 0.0128
2880/8036 [=========>....................] - ETA: 25s - loss: 0.0128
2944/8036 [=========>....................] - ETA: 25s - loss: 0.0128
3008/8036 [==========>...................] - ETA: 24s - loss: 0.0127
3072/8036 [==========>...................] - ETA: 24s - loss: 0.0127
3136/8036 [==========>...................] - ETA: 24s - loss: 0.0127
3200/8036 [==========>...................] - ETA: 23s - loss: 0.0127
3264/8036 [===========>..................] - ETA: 23s - loss: 0.0128
3328/8036 [===========>..................] - ETA: 23s - loss: 0.0128
3392/8036 [===========>..................] - ETA: 22s - loss: 0.0128
3456/8036 [===========>..................] - ETA: 22s - loss: 0.0129
3520/8036 [============>.................] - ETA: 22s - loss: 0.0128
3584/8036 [============>.................] - ETA: 21s - loss: 0.0127
3648/8036 [============>.................] - ETA: 21s - loss: 0.0130
3712/8036 [============>.................] - ETA: 21s - loss: 0.0130
3776/8036 [=============>................] - ETA: 21s - loss: 0.0130
3840/8036 [=============>................] - ETA: 20s - loss: 0.0130
3904/8036 [=============>................] - ETA: 20s - loss: 0.0130
3968/8036 [=============>................] - ETA: 20s - loss: 0.0130
4032/8036 [==============>...............] - ETA: 19s - loss: 0.0132
4096/8036 [==============>...............] - ETA: 19s - loss: 0.0131
4160/8036 [==============>...............] - ETA: 19s - loss: 0.0131
4224/8036 [==============>...............] - ETA: 19s - loss: 0.0132
4288/8036 [===============>..............] - ETA: 18s - loss: 0.0131
4352/8036 [===============>..............] - ETA: 18s - loss: 0.0131
4416/8036 [===============>..............] - ETA: 18s - loss: 0.0130
4480/8036 [===============>..............] - ETA: 17s - loss: 0.0130
4544/8036 [===============>..............] - ETA: 17s - loss: 0.0131
4608/8036 [================>.............] - ETA: 17s - loss: 0.0132
4672/8036 [================>.............] - ETA: 17s - loss: 0.0132
4736/8036 [================>.............] - ETA: 16s - loss: 0.0132
4800/8036 [================>.............] - ETA: 16s - loss: 0.0132
4864/8036 [=================>............] - ETA: 16s - loss: 0.0131
4928/8036 [=================>............] - ETA: 15s - loss: 0.0130
4992/8036 [=================>............] - ETA: 15s - loss: 0.0130
5056/8036 [=================>............] - ETA: 15s - loss: 0.0129
5120/8036 [==================>...........] - ETA: 14s - loss: 0.0129
5184/8036 [==================>...........] - ETA: 14s - loss: 0.0129
5248/8036 [==================>...........] - ETA: 14s - loss: 0.0129
5312/8036 [==================>...........] - ETA: 13s - loss: 0.0129
5376/8036 [===================>..........] - ETA: 13s - loss: 0.0129
5440/8036 [===================>..........] - ETA: 13s - loss: 0.0128
5504/8036 [===================>..........] - ETA: 12s - loss: 0.0128
5568/8036 [===================>..........] - ETA: 12s - loss: 0.0129
5632/8036 [====================>.........] - ETA: 12s - loss: 0.0128
5696/8036 [====================>.........] - ETA: 12s - loss: 0.0128
5760/8036 [====================>.........] - ETA: 11s - loss: 0.0128
5824/8036 [====================>.........] - ETA: 11s - loss: 0.0128
5888/8036 [====================>.........] - ETA: 11s - loss: 0.0128
5952/8036 [=====================>........] - ETA: 10s - loss: 0.0128
6016/8036 [=====================>........] - ETA: 10s - loss: 0.0128
6080/8036 [=====================>........] - ETA: 10s - loss: 0.0128
6144/8036 [=====================>........] - ETA: 9s - loss: 0.0129 
6208/8036 [======================>.......] - ETA: 9s - loss: 0.0128
6272/8036 [======================>.......] - ETA: 9s - loss: 0.0128
6336/8036 [======================>.......] - ETA: 8s - loss: 0.0128
6400/8036 [======================>.......] - ETA: 8s - loss: 0.0128
6464/8036 [=======================>......] - ETA: 8s - loss: 0.0128
6528/8036 [=======================>......] - ETA: 7s - loss: 0.0128
6592/8036 [=======================>......] - ETA: 7s - loss: 0.0128
6656/8036 [=======================>......] - ETA: 7s - loss: 0.0128
6720/8036 [========================>.....] - ETA: 6s - loss: 0.0128
6784/8036 [========================>.....] - ETA: 6s - loss: 0.0128
6848/8036 [========================>.....] - ETA: 6s - loss: 0.0128
6912/8036 [========================>.....] - ETA: 5s - loss: 0.0127
6976/8036 [=========================>....] - ETA: 5s - loss: 0.0127
7040/8036 [=========================>....] - ETA: 5s - loss: 0.0127
7104/8036 [=========================>....] - ETA: 4s - loss: 0.0128
7168/8036 [=========================>....] - ETA: 4s - loss: 0.0127
7232/8036 [=========================>....] - ETA: 4s - loss: 0.0127
7296/8036 [==========================>...] - ETA: 3s - loss: 0.0127
7360/8036 [==========================>...] - ETA: 3s - loss: 0.0127
7424/8036 [==========================>...] - ETA: 3s - loss: 0.0126
7488/8036 [==========================>...] - ETA: 2s - loss: 0.0127
7552/8036 [===========================>..] - ETA: 2s - loss: 0.0127
7616/8036 [===========================>..] - ETA: 2s - loss: 0.0127
7680/8036 [===========================>..] - ETA: 1s - loss: 0.0127
7744/8036 [===========================>..] - ETA: 1s - loss: 0.0127
7808/8036 [============================>.] - ETA: 1s - loss: 0.0127
7872/8036 [============================>.] - ETA: 0s - loss: 0.0126
7936/8036 [============================>.] - ETA: 0s - loss: 0.0127
8000/8036 [============================>.] - ETA: 0s - loss: 0.0127
8064/8036 [==============================] - 44s - loss: 0.0128 - val_loss: 0.0111
Process finished with exit code 0


Using 25 EPOCH's resulted in even better results, both the loss and val_loss were lower than before:

Epoch 25/25
8064/8036 [==============================] - 48s - loss: 0.0112 - val_loss: 0.0101


Using 75 EPOCH's resulted in ... results, :


List of used resources:

The Sequential model API:
https://keras.io/models/sequential/

Getting started with the Keras Sequential model:
https://keras.io/getting-started/sequential-model-guide/

Medium post about his P3 submission insights and used techniques by SDC student Vivek Yadav:
https://chatbotslife.com/using-augmentation-to-mimic-human-driving-496b569760a9#.4gg5ak9im

Medium post by SDC student Mohan Karthik, about the way he used some of the techniques of Vivek Yadav listed above:
https://medium.com/@mohankarthik/cloning-a-car-to-mimic-human-driving-5c2f7e8d8aff#.kd0sa7c2p

Medium post by Vivek Yadav in response to the Medium post of Mohan Karthik about using his earlier stated techniques:
https://medium.com/@vivek.yadav/cloning-a-car-to-mimic-human-driving-using-pretrained-vgg-networks-ac5c1f0e5076#.sb9f2warq

Medium post by Vivek Yadav about Driving performance of augmentation based deep learning technique using Udacity data:
https://medium.com/@vivek.yadav/driving-performance-of-augmentation-based-deep-learning-model-on-udacity-data-247d2234fc49#.iw0vyq7oo

Chatbotslife post by Vivek Yadav aboutLearning human driving behavior using NVIDIA’s neural network model and image augmentation  
https://chatbotslife.com/learning-human-driving-behavior-using-nvidias-neural-network-model-and-image-augmentation-80399360efee#.loapoqmru

End to End Learning for Self-Driving Cars from NVIDIA:
http://images.nvidia.com/content/tegra/automotive/images/2016/solutions/pdf/end-to-end-dl-using-px.pdf

Helpful guide for those of you looking for some hints and advice by Paul Heraty:
https://carnd-forums.udacity.com/questions/26214464/behavioral-cloning-cheatsheet
